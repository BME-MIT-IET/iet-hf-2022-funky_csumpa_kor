plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-parcelize'
    id 'kotlin-kapt'
    id 'kotlinx-serialization'
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
    id 'com.google.firebase.firebase-perf'
    id("org.sonarqube") version "3.3"
}

android {
    namespace 'com.remenyo.papertrader'

    compileSdk 31

    defaultConfig {
        applicationId "com.remenyo.papertrader"
        minSdk 24
        targetSdk 31
        versionCode 4
        versionName "1.1.9"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }
    kapt {
        arguments {
            arg("room.schemaLocation", "$projectDir/schemas")
        }
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            firebaseCrashlytics {
                mappingFileUploadEnabled true
            }
        }
        debug {
            // applicationIdSuffix ".debug"
            debuggable true
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_11.toString()

        // It took more than I thought to find this format
        // https://github.com/googlecodelabs/android-paging/blob/master/app/build.gradle
        freeCompilerArgs += ["-opt-in=kotlin.RequiresOptIn",
                             "-P", "plugin:androidx.compose.compiler.plugins.kotlin:metricsDestination=/home/remenyo/composeDebug/metric",
                             "-P", "plugin:androidx.compose.compiler.plugins.kotlin:reportsDestination=/home/remenyo/composeDebug/reports"]
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion compose_version
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

androidComponents { // https://issuetracker.google.com/issues/223240936#comment21
// because AGP does not work yet with Google's own lib (com.google.gms.google-services)
    onVariants(selector().all(), {
        def capitalizedVariantName = name.substring(0, 1).toUpperCase() + name.substring(1)
        afterEvaluate {
            tasks.named("map${capitalizedVariantName}SourceSetPaths").configure {
                it.dependsOn("process${capitalizedVariantName}GoogleServices")
            }
        }
    })
}

dependencies {

    // Firebase
    implementation platform('com.google.firebase:firebase-bom:29.3.1')
    implementation 'com.google.firebase:firebase-analytics-ktx'
    implementation 'com.google.firebase:firebase-auth-ktx'
    implementation 'com.google.firebase:firebase-dynamic-links-ktx'
    implementation 'com.google.firebase:firebase-database-ktx'
    implementation 'com.google.firebase:firebase-crashlytics-gradle:2.8.1'
    implementation 'com.google.firebase:firebase-crashlytics-ktx'
    implementation 'com.google.firebase:firebase-perf-ktx'
    implementation 'com.google.firebase:firebase-messaging-ktx'

    // implementation 'com.google.firebase:firebase-inappmessaging-display'

    implementation 'com.google.firebase:firebase-appcheck-safetynet:16.0.0-beta06'

    implementation 'com.google.android.gms:play-services-auth:20.2.0'

    // MMKV: SharedPreferences, but better
    implementation 'com.tencent:mmkv:1.2.13'

    // Room: MySQL DB Helper
    implementation("androidx.room:room-runtime:$roomVersion")
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
    implementation 'androidx.test.ext:junit-ktx:1.1.3'
    annotationProcessor("androidx.room:room-compiler:$roomVersion")
    kapt("androidx.room:room-compiler:$roomVersion")
    implementation("androidx.room:room-ktx:$roomVersion")

    // Kotlinx serialization plugin: JSON serialization
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:1.3.2"

    // RetroFit: API consumption
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    // Json deserializer converter
    implementation 'com.jakewharton.retrofit:retrofit2-kotlinx-serialization-converter:0.8.0'


    implementation 'com.google.android.material:material:1.6.0-rc01'

    // Jetpack Compose
    implementation 'androidx.compose.material3:material3:1.0.0-alpha10'
    implementation "androidx.compose.material:material-icons-extended:$compose_version"
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.runtime:runtime:$compose_version"
    implementation "androidx.compose.runtime:runtime-livedata:$compose_version"
    implementation "androidx.compose.material:material:$compose_version"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_version"

    // stock navigation lib is worse at the moment than this
    implementation 'dev.olshevski.navigation:reimagined:1.1.0'


    // for coloring status bar, i need a separate a dependency lol
    implementation 'com.google.accompanist:accompanist-systemuicontroller:0.24.6-alpha'
    // swipe to refresh
    implementation "com.google.accompanist:accompanist-swiperefresh:0.24.6-alpha"

    implementation 'androidx.core:core-ktx:1.8.0-beta01'

    // implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.5.0-alpha06'
    // implementation 'androidx.lifecycle:lifecycle-viewmodel-compose:2.5.0-alpha06'
    // implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.5.0-alpha06'
    implementation 'androidx.activity:activity-compose:1.5.0-beta01'



     testImplementation 'junit:junit:4.13.2'
    testImplementation "org.mockito:mockito-core:2.8.47"
    testImplementation "io.mockk:mockk:1.12.3"
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
    debugImplementation("androidx.compose.ui:ui-test-manifest:$compose_version")
    // This should render composables locally... Well it does, but poorly.
    // debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"
}

sonarqube {
    properties {
        property "sonar.projectKey", "BME-MIT-IET_iet-hf-2022-funky_csumpa_kor"
        property "sonar.organization", "bme-mit-iet-org"
        property "sonar.host.url", "https://sonarcloud.io"
    }
}